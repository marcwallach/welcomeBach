#!/bin/bash

# shellcheck disable=SC1004,SC2162

player="mpv"

! hash "$player" 2>/dev/null && player="xdg-open"

search="$(awk -c -v today="$(date "+%Y%m%d")" \
		'BEGIN {
				srand( 20200101 - today )
				random = sprintf( int( 1105 * rand() + 1 ) )
				}
		NR == random' bwv.txt )"

url="https://www.youtube.com/results?search_query=${search// /+}"

titles_links="$(curl -s "$url" | ./filter.awk)"

declare -A title_url

while IFS=$'\t' read title url; do
	title_url[$title]=$url
done <<< "$titles_links"


message() {
  cat << EOF
SYNOPSIS
 	 welcomeBach [OPTIONS] [ARGUMENTS]

DESCRIPTION
  welcomeBach provides a list of links to performances on Youtube of a Bach piece chosen at random

OPTIONS
  -h	Print help and exit.
  -p	Set video-player command.
  -c 	Use a CLI prompt to select link. (Default)
  -d 	Use dmenu to select link.
  -f 	Use fzf to select link.
EOF
}

cl_prompt() {
	printf '%s\n' "Today's Bach is:" "$search" ""

	PS3=$'\n'"Choose a link to a performance: "

	COLUMNS=1

    select title in "${!title_url[@]}"; do
    		"$player" "${title_url[$title]}"
			exit 0
    done
	}

dmenu_prompt() {
    title="$(dmenu -l 5 -p "Today's Bach is $search" <<< "$(cut -f1 - <<< "$titles_links")")"
    "$player" "${title_url[$title]}"
	exit 0
	}

fzf_prompt() {
	title="$(fzf --prompt="Today's Bach is $search > " <<< "$(cut -f1 - <<< "$titles_links")")"
    "$player" "${title_url[$title]}"
	exit 0
	}

[ $# -eq 0 ] && cl_prompt

while getopts "cdfhp:" opt ; do
	case $opt in
		p) player="$OPTARG" ; "${prompt:-cl_prompt}" ;;
		c) prompt=cl_prompt ;;
		d) prompt=dmenu_prompt ;;
		f) prompt=fzf_prompt ;;
		h) message ; exit ;;
		*) message ; exit 1 ;;
	esac
done

$prompt
