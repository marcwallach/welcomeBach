#!/bin/bash

# shellcheck disable=SC1004,SC2162

player="mpv"

! hash "$player" 2>/dev/null && player="xdg-open"

declare -A title_url

message() {
	cat << EOF
SYNOPSIS
 	 welcomeBach [OPTIONS] [ARGUMENTS]

DESCRIPTION
  welcomeBach provides a list of links to performances on Youtube of a Bach piece chosen at random

OPTIONS
  -h	Print help and exit.
  -p	Set video-player command.
  -c 	Set composer's catalogue to pick from
  -d 	Use dmenu to select link.
  -f 	Use fzf to select link.
EOF
	}

fetch() {
	[ -z "$composer" ] && composer=js_bach

	search="$(awk -v today="$(date "+%Y%m%d")" \
			-v lines="$(wc -l ./catalogues/$composer)" \
			'BEGIN {
					srand( 20200101 - today )
					random = int( lines * rand() + 1 )
				   }
			NR == random' ./catalogues/$composer )"

	url="https://www.youtube.com/results?search_query=${search// /+}+${composer}"

	while IFS=$'\t' read title url; do
		title_url[$title]=$url
	done < <(curl -s "$url" | ./filter.awk)
	}

cl_prompt() {
	fetch &&

	printf '%s\n' "Today's ${composer##*_} is:" "$search" ""

	PS3=$'\n'"Choose a link to a performance: "

	COLUMNS=1

	select title in "${!title_url[@]}"; do
			"$player" "${title_url[$title]}"
			exit 0
	done
	}

dmenu_prompt() {
	fetch &&

	title="$(dmenu -l 5 -p "Today's Bach is $search" \
	<<< "$(printf '%s\n' "${!title_url[@]}")")"

	if  [ -n "$title" ]; then
		"$player" "${title_url[$title]}"
		exit 0
	else
		exit 1
	fi
	}

fzf_prompt() {
	fetch &&

	title="$(fzf --prompt="Today's Bach is $search > " \
	<<< "$(printf '%s\n' "${!title_url[@]}")")"

	if  [ -n "$title" ]; then
		"$player" "${title_url[$title]}"
		exit 0
	else
		exit 1
	fi
	}

while getopts "bc:dfhp:" opt ; do
	case $opt in
		p) player="$OPTARG" ;;
		c) composer="$OPTARG" ;;
		d) prompt=dmenu_prompt ;;
		f) prompt=fzf_prompt ;;
		h) message ; exit ;;
		*) message ; exit 1 ;;
	esac
done

${prompt:-cl_prompt}
